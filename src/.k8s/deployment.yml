kind: Namespace
apiVersion: v1
metadata:
  name: identity
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: keycloak-deployment
  name: keycloak-deployment
  namespace: identity
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-deployment
  template:
    metadata:
      labels:
        app: keycloak-deployment
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:15.0.2
          imagePullPolicy: Always
          resources:
            limits:
              memory: "1Gi"
              cpu: "500m"
            requests:
              memory: "1Gi"
              cpu: "500m"
          env:
            - name: KEYCLOAK_USER
              value: "admin"

            - name: KEYCLOAK_PASSWORD
              value: "admin"

            - name: PROXY_ADDRESS_FORWARDING
              value: "true"

            - name: DB_VENDOR
              value: "postgres"

            - name: DB_ADDR
              value: ""

            - name: DB_DATABASE
              value: "keycloak"

            - name: DB_USER
              value: ""

            - name: DB_SCHEMA
              value: public

            - name: DB_PORT
              value: "5432"

            - name: DB_PASSWORD
              value: ""

            - name: JDBC_PARAMS
              value: "enabledTLSProtocols=TLSv1.2"
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: keycloak-hpa
  namespace: identity
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: keycloak-deployment
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 75
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-service
  namespace: identity
  labels:
    app: keycloak-deployment
spec:
  selector:
    app: keycloak-deployment
  ports:
    - port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-hosts
  namespace: identity
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-production
spec:
  tls:
    - hosts:
        - keycloak.jailtonjunior.site
      secretName: keycloak-tls
  rules:
    - host: keycloak.jailtonjunior.site
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: keycloak-service
                port:
                  number: 80
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-production
spec:
  acme:
    email: jailton.teixeira1@gmail.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-production
    solvers:
      - http01:
          ingress:
            class: nginx
